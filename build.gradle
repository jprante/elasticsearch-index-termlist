import java.time.ZoneOffset
import java.time.ZonedDateTime

buildscript {
    repositories {
        jcenter()
        maven {
            url 'http://xbib.org/repository'
        }
    }
    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:6.5.4"
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'

esplugin {
    description 'Termlist plugin for Elasticsearch'
    name 'elasticsearch-index-termlist'
    classname 'org.xbib.elasticsearch.plugin.termlist.TermlistPlugin'
}

configurations {
    wagon
}

dependencies {
    compileOnly "org.apache.logging.log4j:log4j-core:${project.property(('log4j.version'))}"
    testCompile "org.elasticsearch:elasticsearch:${project.property('elasticsearch.version')}"
    testCompile "org.codelibs.elasticsearch.module:analysis-common:${project.property('elasticsearch.version')}"
    testCompile "junit:junit:${project.property('junit.version')}"
    wagon "org.apache.maven.wagon:wagon-ssh:${project.property('wagon.version')}"
}

jar {
    manifest {
        attributes(
                'Implementation-Title': "${project.group}#${project.name};${project.version}",
                'Implementation-Version': version,
                'Implementation-Vendor': "xbib",
                'Build-Date': ZonedDateTime.now(ZoneOffset.UTC),
                'Build-Java-Version': System.getProperty("java.version"),
                'X-Compile-Source-JDK': compileJava.targetCompatibility,
                'X-Compile-Target-JDK': compileJava.sourceCompatibility,
                'X-Compile-Elasticsearch-Version': version,
                'X-Compile-Lucene-Version': project.property('lucene.version'),
                'X-Compile-Elasticsearch-Snapshot': false
        )
    }
}

test {
    enabled = true
}

integTest {
    enabled = false
}

clean {
    delete 'out'
    delete fileTree('.') { include '.local*.log' }
}

artifacts {
    archives javadocJar, sourcesJar
}

if (project.hasProperty('signing.keyId')) {
    signing {
        sign configurations.archives
    }
}

licenseFile = rootProject.file('LICENSE.txt')
noticeFile = rootProject.file('NOTICE.txt')
checkstyleMain.source = 'src/main/java'
forbiddenApisMain.enabled = false
forbiddenApisTest.enabled = false
licenseHeaders.enabled = false
